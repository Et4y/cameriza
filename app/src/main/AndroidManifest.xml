<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.aait.tphoon">

    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.READ_CONTACTS" />
    <uses-permission android:name="android.permission.RECORD_AUDIO" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE"/>
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"
        tools:ignore="ScopedStorage" />

    <application
        android:name="com.aait.tphoon.presentation.base.BaseApplication"
        android:allowBackup="false"
        android:icon="@mipmap/app_logo"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/app_logo"
        android:supportsRtl="true"
        android:requestLegacyExternalStorage="true"
        android:theme="@style/AppTheme"
        android:usesCleartextTraffic="true"
        tools:replace="android:allowBackup,icon,theme,label,name">

        <activity
            android:name="com.aait.tphoon.presentation.MainActivity"
            android:windowSoftInputMode="adjustResize|stateAlwaysVisible">


            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>

        </activity>


        <service
            android:name=".HeadsUpNotificationService"
            android:permission="android.permission.BIND_JOB_SERVICE" />


        <service
            android:name=".FirebaseMessaging"
            android:exported="false">
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>

        <!-- Set custom default icon. This is used when no icon is set for incoming notification messages.
             See README(https://goo.gl/l4GJaQ) for more. -->
        <meta-data
            android:name="com.google.firebase.messaging.default_notification_icon"
            android:resource="@drawable/ic_stat_ic_notification" />
        <!-- Set color used with incoming notification messages. This is used when no color is set for the incoming
             notification message. See README(https://goo.gl/6BKBk7) for more. -->
        <meta-data
            android:name="com.google.firebase.messaging.default_notification_color"
            android:resource="@color/colorAccent" />
        <meta-data
            android:name="firebase_messaging_auto_init_enabled"
            android:value="false" />
        <meta-data
            android:name="firebase_analytics_collection_enabled"
            android:value="false" />

        <meta-data
            android:name="com.google.android.geo.API_KEY"
            android:value="@string/google_maps_key" />

        <service
            android:name="com.aait.tphoon.util.phone_contacts.FetchContactsIntentService"
            android:enabled="true"
            android:exported="true"
            android:permission="android.permission.BIND_JOB_SERVICE" />

        <meta-data
            android:name="push_kit_auto_init_enabled"
            android:value="true" />

        <receiver
            android:name=".CallNotificationActionReceiver"
            android:enabled="true">
            <intent-filter android:priority="999">
                <action android:name="ConstantApp.CALL_RECEIVE_ACTION" />
                <action android:name="ConstantApp.CALL_CANCEL_ACTION" />
            </intent-filter>
        </receiver>
        <!--        &lt;!&ndash;  you need to paste this code to get Hilt's WorkManager Inject working.&ndash;&gt;-->
        <!--        <provider-->
        <!--            android:name="androidx.work.impl.WorkManagerInitializer"-->
        <!--            android:authorities="${applicationId}.workmanager-init"-->
        <!--            tools:node="remove" />-->
        <!--        <provider-->
        <!--            android:name="androidx.startup.InitializationProvider"-->
        <!--            android:authorities="${applicationId}.androidx-startup"-->
        <!--            android:exported="false"-->
        <!--            tools:node="remove">-->
        <!--            &lt;!&ndash; If you are using androidx.startup to initialize other components &ndash;&gt;-->
        <!--            <meta-data-->
        <!--                android:name="androidx.work.impl.WorkManagerInitializer"-->
        <!--                android:value="androidx.startup"-->
        <!--                tools:node="remove" />-->
        <!--        </provider>-->


    </application>

</manifest>